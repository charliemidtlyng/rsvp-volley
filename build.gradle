repositories {
    mavenCentral()
}
    
buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.2.0.RELEASE")
    }
}
apply plugin: 'idea'
apply plugin: 'groovy'
apply plugin: 'spring-boot'

jar {
    group = 'no.charlie.volley'
    baseName = 'application'
}

mainClassName = "no.charlie.rsvp.Application"
sourceCompatibility = 1.7
targetCompatibility = 1.7
def groovyVersion = '2.3.7'



dependencies {
    compile "org.codehaus.groovy:groovy-all:${groovyVersion}",
            'org.springframework.boot:spring-boot-starter-web',
            'org.springframework.boot:spring-boot-starter-jersey',
            'org.springframework.boot:spring-boot-starter-security',
            'org.springframework:spring-web',
            'org.slf4j:log4j-over-slf4j:1.7.7',
            'com.fasterxml.jackson.core:jackson-core:2.4.3',
            'com.fasterxml.jackson.core:jackson-databind:2.4.3',
            'com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider:2.4.3',
            'com.fasterxml.jackson.datatype:jackson-datatype-joda:2.4.3',
            'com.fasterxml.jackson.datatype:jackson-datatype-hibernate4:2.4.3',
            'org.springframework.boot:spring-boot-starter-data-jpa:1.2.0.RELEASE',
            'joda-time:joda-time:2.5',
            'org.jadira.usertype:usertype.jodatime:2.0.1',
            'commons-dbcp:commons-dbcp:1.4',
            'net.sourceforge.jtds:jtds:1.2.7',
            'com.fasterxml.jackson.core:jackson-annotations:2.4.3',
            'org.postgresql:postgresql:9.3-1102-jdbc41',
            'org.springframework.boot:spring-boot-starter-actuator',
            'com.sendgrid:sendgrid-java:2.1.0',
            'org.codehaus.groovy.modules.http-builder:http-builder:0.7.1',
            'org.mnode.ical4j:ical4j:1.0.7'

        runtime 'com.h2database:h2:1.3.176'
    testCompile 'org.spockframework:spock-core:0.7-groovy-2.0',
            'cglib:cglib-nodep:3.1'

}

idea {
    module {
        excludeDirs += file('frontend/node_modules')
        excludeDirs += file('frontend/bower_components')
        excludeDirs += file('frontend/dist')
        excludeDirs += file('frontend/build')
        excludeDirs += file('src/main/resources/static')
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.2'
}

test {
    jvmArgs '-XX:-UseSplitVerifier'
}

task stage(type: Copy, dependsOn: [clean, build]) {
    from jar.archivePath
    into project.rootDir
    rename {
        'app.jar'
    }
}
stage.mustRunAfter(clean)
clean << {
    project.file('app.jar').delete()
}


bootRun {
    if (project.hasProperty('profile')) {
        args "--spring.profiles.active=${project.profile}"
    }
}
